(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{200:function(e,t,r){"use strict";r.r(t);var _=r(0),n=Object(_.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._m(1),e._m(2),e._m(3),e._m(4),r("p",[e._v("C언어는 LBYL, 파이썬은 EAFP 스타일이다.")]),e._m(5),r("p",[e._v("반복자가 for문을 제어하기 위한 것처럼, 콘텍스트 관리자는 with문을 제어하기 위해 존재한다.")]),e._m(6),r("p",[e._v("콘텍스트 관리자는 느리지만, 독특한 기능 덕분에, 파이썬 커뮤니티에서는 창의적으로 활용하는 방법을 찾고 있고, 표준라이브러리에서 다음과 같이 이용되고 있다.")]),r("ul",[r("li",[e._v("sqlite3 모듈의 트랜잭션: "),r("a",{attrs:{href:"http://bit.ly/1MM89PC",target:"_blank",rel:"noopener noreferrer"}},[e._v("연결을 콘텍스트 관리자로 사용하기"),r("OutboundLink")],1)]),r("li",[e._v("threading 코드에서 lock, condition, semaphore 보관: "),r("a",{attrs:{href:"http://bit.ly/1MM8guy",target:"_blank",rel:"noopener noreferrer"}},[e._v("with 문에서 락, 컨디션, 세마포어 이용하기"),r("OutboundLink")],1)]),r("li",[e._v("Decimal 객체의 산술 연산: "),r("a",{attrs:{href:"http://bit.ly/1MM8eTw",target:"_blank",rel:"noopener noreferrer"}},[e._v("decimal.localcontext 문서"),r("OutboundLink")],1)]),r("li",[e._v("객체의 테스트를 위한 임시 패치: "),r("a",{attrs:{href:"http://bit.ly/1MM8imk",target:"_blank",rel:"noopener noreferrer"}},[e._v("unittest.mock.patch()"),r("OutboundLink")],1)])]),e._m(7),r("p",[r("a",{attrs:{href:"http://bit.ly/1HGqZpJ",target:"_blank",rel:"noopener noreferrer"}},[e._v("contextlib - with 문 콘텍스트를 위한 유틸리티"),r("OutboundLink")],1),e._v("를 먼저 참고하자.")]),e._m(8),e._m(9),e._m(10),e._m(11),r("ul",[r("li",[r("a",{attrs:{href:"http://bit.ly/1MMa1YB",target:"_blank",rel:"noopener noreferrer"}},[e._v("8장 복합문"),r("OutboundLink")],1)]),r("li",[r("a",{attrs:{href:"http://bit.ly/1MMa2Mp",target:"_blank",rel:"noopener noreferrer"}},[e._v("파이썬에서 try-except-else를 사용하는 것이 좋은 방법인가?"),r("OutboundLink")],1)]),r("li",[e._v("레이몬드 헤팅거의 "),r("a",{attrs:{href:"http://bit.ly/1MM9pCm",target:"_blank",rel:"noopener noreferrer"}},[e._v("PyCon US 2013 키노트"),r("OutboundLink")],1),e._m(12)])])])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"콘텍스트-관리자와-else-블록"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#콘텍스트-관리자와-else-블록","aria-hidden":"true"}},[this._v("#")]),this._v(" 콘텍스트 관리자와 else 블록")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"else-블록"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#else-블록","aria-hidden":"true"}},[this._v("#")]),this._v(" else 블록")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[r("code",[e._v("if/else")]),e._v("는 매우 직관적이나, "),r("code",[e._v("for/else")]),e._v(", "),r("code",[e._v("while/else")]),e._v(", "),r("code",[e._v("try/else")]),e._v("는 반대 의미로 동작한다. "),r("code",[e._v("else")]),e._v("대신 "),r("code",[e._v("then")]),e._v("으로 읽으면 쉽게 이해될 법하다. 예외나 "),r("code",[e._v("return")]),e._v(", "),r("code",[e._v("break")]),e._v(", "),r("code",[e._v("continue")]),e._v("와 같이 블록 중간에서 빠져나오지 않았을 때 "),r("code",[e._v("else")]),e._v("문은 실행된다. 즉, "),r("code",[e._v("for")]),e._v(" 문장이 문제 없이 실행되고 나서, "),r("code",[e._v("else")]),e._v(" 구문이 실행되는 것이다.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("EAFP")]),this._v(": 허락을 구하기보다는 용서를 구하는 것이 더 쉽다. (Easier to Ask for Forgiveness than Permission)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("LBYL")]),this._v(": 누울 자리를 보고 다를 뻗으라. (Leap Before You Leap)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"콘텍스트-관리자와-with-블록"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#콘텍스트-관리자와-with-블록","aria-hidden":"true"}},[this._v("#")]),this._v(" 콘텍스트 관리자와 with 블록")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[r("code",[e._v("with")]),e._v(" 문은 "),r("code",[e._v("try/finally 패턴")]),e._v("을 단순화하기 위해 설계되었다. 콘텍스트 관리자는 "),r("code",[e._v("__enter__()")]),e._v("와 "),r("code",[e._v("__exit__()")]),e._v("로 구성.\n"),r("code",[e._v("with")]),e._v(" 문을 새로운 범위를 지정하는 것은 아니므로, 변수 자체는 with문 바깥에서도 살아 있다. 하지만 "),r("code",[e._v("with")]),e._v("에서 진입코드가 실행되고, 끝날 때 "),r("code",[e._v("__exit__()")]),e._v(" 메서드가 호출된다.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"contextlib-유틸리티"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contextlib-유틸리티","aria-hidden":"true"}},[this._v("#")]),this._v(" contextlib 유틸리티")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("code",[e._v("closing()")]),e._v(": "),r("code",[e._v("close()")]),e._v(" 메서드를 제공하지만, 콘텍스트 프로토콜을 구현하지 않은 객체를 위해 콘텍스트 관리자를 생성")]),r("li",[r("code",[e._v("suppress")]),e._v(": 지정한 예외를 임시로 무시")]),r("li",[r("code",[e._v("@contextmanager")]),e._v(": 클래스를 사용하지 않고, 간단한 제너레이터 함수로부터 콘텍스트 관리자 생성. 가장 널리 이용.")]),r("li",[r("code",[e._v("ContextDecorator")]),e._v(": 콘텍스트 관리자를 함수 데커레이터로도 사용할 수 있게 해주는 기반 클래스")]),r("li",[r("code",[e._v("ExitStack")]),e._v(": "),r("code",[e._v("__exit__()")]),e._v(" 메서드를 LIFO 순으로 호출해줌.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"contextmanager-사용하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contextmanager-사용하기","aria-hidden":"true"}},[this._v("#")]),this._v(" @contextmanager 사용하기")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[r("code",[e._v("@contextmanager")]),e._v("는 간편하게 콘텍스트 관리자를 생성할 수 있는 데코레이터로, "),r("code",[e._v("yield")]),e._v("문을 하나만 가진 제너레이터를 구현하면 된다. "),r("code",[e._v("yield")]),e._v(" 문 앞은 "),r("code",[e._v("__enter__()")]),e._v(" 메서드로, 그 이후 코드는 "),r("code",[e._v("__exit__()")]),e._v(" 메서드로 할당된다.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"읽을거리"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#읽을거리","aria-hidden":"true"}},[this._v("#")]),this._v(" 읽을거리")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("'서브루틴은 컴퓨터 언어 역사에서 가장 중요한 발견'이라며, A;B;C작업과 P;B;Q 작업 사이에서 B작업을 서브루틴으로 만들 수 있다. 즉 샌드위치를 만들면서 속을 마음대로 바꿀 수 있는데, with 문은 샌드위치 빵을 마음대로 바꿀 수 있는 기능인 것이다. with문은 서브루틴의 짝이다.")])])}],!1,null,null,null);t.default=n.exports}}]);