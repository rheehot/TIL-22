(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{224:function(t,e,_){"use strict";_.r(e);var s=_(0),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("div",{staticClass:"content"},[t._m(0),_("p",[t._v("Do it! Vue.js 입문 예제로 이해하고 실전 프로젝트로 완성한다!")]),_("p",[t._v("장기효 저 | 이지스퍼블리싱 | 2018년 02월 05일")]),t._m(1),_("p",[t._v("Vue.js는 공식문석가 매우 잘 정리되어 있는 편인데, 빠르게 개념을 정리하고 싶어서, 우리나라 저자의 책을 구매하여 빠르게 읽었다.")]),t._m(2),t._m(3),_("p",[t._v("저자가 소개하는 3일 코스")]),t._m(4),t._m(5),_("p",[t._v("Vue.js는 구글에서 앵귤러를 이용하던 개발자였던 에반 유(Evan You)에 의해 만들어졌다. 배우기 쉬운 프레임워크를 목표로 개발되었다.")]),_("p",[t._v("뷰의 특징")]),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),_("p",[t._v("인스턴스로 지정한 유효 범위가 존재")]),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),_("p",[t._v("Vue.js는 앵귤러1이나 백본과 달리 한 화면에 여러개의 컴포넌트를 가지므로, 각 컴포넌트 안의 지역 컴포넌트는 서로 다른 컴포넌트의 자료에 접근할 수 없다.")]),t._m(16),t._m(17),_("p",[t._v("하위 컴포넌트에서 상위 컴포넌트로 자료를 전달하기 위해서는 이벤트를 이용한다. 이는 뷰의 단방향 데이터 흐름의 원칙 때문이다.")]),t._m(18),_("p",[t._v("동일한 레벨의 컴포넌트가 자료를 주고 받기 위해서는 상위 컴포넌트로 이벤트를 발생시킨 후, 상위 컴포넌트가 props로 데이터를 내려 보내주어야 한다.")]),t._m(19),_("p",[t._v("이벤트 버스를 이용하면, props 속성을 이용하지 않아도 되어서 편리하나, 컴포넌트가 많아지면, 흐름을 파악하기 어렵다. 이러한 문제를 해결하기 위해서 뷰엑스(Vuex)라는 상태 관리 도구가 이용된다.")]),t._m(20),t._m(21),_("p",[t._v("라우터는 웹페이지 간의 이동방식을 의미하는데, SPA(Single Page Application)에서 널리 이용되고 있다. 라우팅을 이용하면, 화면 전환시 깜박임이 발생할 수 있는데, 이를 매끄럽게 처리할 수 있다.")]),t._m(22),t._m(23),t._m(24),_("p",[t._v("네스티드 라우터는 컴포넌트 수가 적을 때는 유용하게 이용할 수 있지만, 한번에 많은 수의 컴포넌트를 표시하기 어렵다. 이럴 때 네임드 뷰를 쓴다.")]),t._m(25),t._m(26),_("p",[t._v("웹 앱 HTTP 통신의 대표적인 형태는 제이쿼리의 ajax가 있는데, 리액트나 앵귤러에서도 활발하게 사용된다. 뷰에서는 뷰 리소드와 액시오스(axios)라는 라이브러리를 많이 이용하고 있다.")]),_("p",[t._v("뷰 리스스(resource)는 초기에는 공식 코어 라이브러리로 취급되었으나, 2016년 말 PageKit 팀의 라이브러리로 돌아갔다. 이는 코어팀에서 뷰 프레임워크에서 필수적인 요소라고 판단하지 않았기 때문인데, 여전히 많은 사람들이 쓰고 있다.")]),t._m(27),_("p",[t._v("액시오스는 뷰 커뮤니티에서 가장 많이 사용하는 HTTP 통신 라이브러리이다. 액시오스는 Promise 기반의 API를 지원한다.")]),t._m(28),t._m(29),t._m(30),_("p",[t._v("데이터 바인딩은 "),_("code",[t._v(t._s())]),t._v(" 문법과 "),_("code",[t._v("v-bind")]),t._v(" 속성이 있다. "),_("code",[t._v("{{}}")]),t._v("는 뷰 인스턴스의 "),_("code",[t._v("data")]),t._v(" 속성에서 지정한 사전형 자료에서 매칭되는 값으로 채워준다. HTML 코드에서 "),_("code",[t._v('<p v-bind:id="idA">')]),t._v("라고 작성하면, "),_("code",[t._v("<p>")]),t._v(" 태그의 "),_("code",[t._v("id")]),t._v(" 속성으로 값을 매칭시켜주는데, 그 레퍼런스가 되는 키워드가 "),_("code",[t._v("idA")]),t._v("가 된다. 즉 이 키는 뷰 인스턴스에서 "),_("code",[t._v("data")]),t._v(" 속성으로 지정된 사전형에서 이용하는 키가 되며, 할당된 값과 연결하여, 갱신해준다.")]),_("p",[_("code",[t._v(t._s())]),t._v("에서 data 속성을 적어주었지만, 간단한 자바스크립트 연산이 가능하다. 다만 식으로 해석하기 때문에, 분기 구분을 사용할 수는 없다. 복잡한 식은 사용가능하지만 가급적 지양하고, 뷰 인스턴스의 "),_("code",[t._v("computed")]),t._v(" 속성으로 할당해준다. "),_("code",[t._v("computed")]),t._v(" 속성을 이용하면, 캐싱효과를 볼 수 있다.")]),t._m(31),t._m(32),t._m(33)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"do-it-vue-js-입문"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#do-it-vue-js-입문","aria-hidden":"true"}},[this._v("#")]),this._v(" Do it! Vue.js 입문")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"images/do-it-vue-js.jpg",alt:"책 표지"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"목차"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#목차","aria-hidden":"true"}},[this._v("#")]),this._v(" 목차")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ul",[_("li",[t._v("01 Vue.js 소개")]),_("li",[t._v("02 개발 환경 설정 및 첫 번째 프로젝트")]),_("li",[t._v("03 화면을 개발하기 위한 필수 단위 - 인스턴스 & 컴포넌트")]),_("li",[t._v("04 상용 웹 앱을 개발하기 위한 필수 기술들 - 라우터 & HTTP 통신")]),_("li",[t._v("05 화면을 개발하기 위한 기본 지식과 팁 - 템플릿 & 프로젝트 구성")]),_("li",[t._v("06 실전 애플리케이션 만들기")]),_("li",[t._v("07 Vue.js 고급 개발자 되기")]),_("li",[t._v("현장 밀착 취재")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("1일차: 1장-3장")]),e("li",[this._v("2일차: 4장-6장 4절")]),e("li",[this._v("3일차: 6장 5절-부록")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"vue-js-소개"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-소개","aria-hidden":"true"}},[this._v("#")]),this._v(" Vue.js 소개")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("MVVM(Model-View-ViewModel) 구조로 이루어진다.")]),e("li",[this._v("컴포넌트 기반 프레임워크")]),e("li",[this._v("앵귤러의 데이터 바인딩 특성(Two-way data binding)과 리액트의 가상 돔(Virtual DOM) 기반 렌더링 특징(One-way data flow)을 모두 가지고 있다.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"개발-환경-설정-및-첫-번째-프로젝트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#개발-환경-설정-및-첫-번째-프로젝트","aria-hidden":"true"}},[this._v("#")]),this._v(" 개발 환경 설정 및 첫 번째 프로젝트")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Atom: 개인적으로 현 시점에는 Visual Studio Code가 가장 나은 환경")]),e("li",[this._v("node.js")]),e("li",[this._v("뷰 개발자 도구 (크롬 익스텐션): 로컬 접속 허용")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"인스턴스-컴포넌트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#인스턴스-컴포넌트","aria-hidden":"true"}},[this._v("#")]),this._v(" 인스턴스 & 컴포넌트")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"뷰-인스턴스"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#뷰-인스턴스","aria-hidden":"true"}},[this._v("#")]),this._v(" 뷰 인스턴스")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("p",[t._v("인스턴스를 생성하면, "),_("code",[t._v("created")]),t._v(", "),_("code",[t._v("mounted")]),t._v("를 거쳐 인스턴스가 화면에 부착되고, 모델 값이 변경되었을 때는 "),_("code",[t._v("updated")]),t._v(" 함수가 호출되며, 인스턴스를 소멸과정에서 "),_("code",[t._v("destroyed")]),t._v(" 함수가 호출된다. 각 상태함수 이전에 "),_("code",[t._v("beforeMethod")]),t._v("가 호출된다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"뷰-컴포넌트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#뷰-컴포넌트","aria-hidden":"true"}},[this._v("#")]),this._v(" 뷰 컴포넌트")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("전역 컴포넌트와 지역 컴포넌트로 구분되며, 접근 범위에 따라 구분된다. 전역 컴포넌트는 "),e("code",[this._v("Vue.component('컴포넌트 이름', {});")]),this._v("와 같이 정의된다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("지역 컴포넌트는 뷰 인스턴스 안에서 "),e("code",[this._v("components")]),this._v(" 속성으로 정의된다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"뷰-컴포넌트-통신"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#뷰-컴포넌트-통신","aria-hidden":"true"}},[this._v("#")]),this._v(" 뷰 컴포넌트 통신")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("부모-자식간 관계를 통해서 자료를 주고 받을 수 있다. 이 때 "),e("code",[this._v("props")]),this._v(" 속성을 이용한다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("자식 컴포넌트에 "),e("code",[this._v("v-bind:")]),this._v("를 통해 상위 컴포넌트의 데이터 속성을 넘겨준다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("이벤트 발생은 "),e("code",[this._v("this.$emit('이벤트명');")]),this._v("으로 호출하고 수신하는 쪽에서는 "),e("code",[this._v('v-on:이벤트명="상위 컴포넌트의 메서드명"')]),this._v("으로 받아준다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("이러한 상황을 해결하는 방법이 이벤트 버스이다. 이벤트 버스는 옵저버 패턴과 유사하게 이벤트만 받는 컴포넌트를 만들고, 여기에 "),e("code",[this._v("eventBus.$emit('이벤트명', 데이터);")]),this._v("로 등록하고, 받는 컴포넌트는 "),e("code",[this._v("eventBus.$on('이벤트명', function(데이터) {});")]),this._v("로 받는다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"라우터-http-통신"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#라우터-http-통신","aria-hidden":"true"}},[this._v("#")]),this._v(" 라우터 & HTTP 통신")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"뷰-라우터"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#뷰-라우터","aria-hidden":"true"}},[this._v("#")]),this._v(" 뷰 라우터")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("p",[_("code",[t._v("router-link")]),t._v("는 "),_("code",[t._v("a")]),t._v(" 태그로 전환되고, "),_("code",[t._v("router-view")]),t._v("는 라우터를 통해서 삽입되는 뷰 컴포넌트 위치가 지정된다. 뷰 라우터는 "),_("code",[t._v("var router = new VueRouter({ routers });")]),t._v("로 생성하고, "),_("code",[t._v("var app = new Vue({ router }).$mount('#app');")]),t._v("로 웹페이지에 붙여준다. 여기서 "),_("code",[t._v("$mount()")]),t._v("는 "),_("code",[t._v("el")]),t._v(" 속성으로 컴포넌트를 붙여주는 기본 방식과 달리 라우터는 "),_("code",[t._v("el")]),t._v(" 속성을 주지 않고, "),_("code",[t._v("$mount()")]),t._v("를 이용하여 강제로 인스턴스를 화면에 붙이는 방식으로 공식 문서에서 이러한 방식으로 안내하고 있다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("라우터를 이용할 때 해쉬태그가 생성되는데, 이를 제거하기 위해서는 "),e("code",[this._v("new VueRouter()")]),this._v("에서 "),e("code",[this._v("mode: 'history'")]),this._v(" 속성을 추가하여 히스토리 모드로 설정해 준다.")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("p",[t._v("네스티드 라우터는 컴포넌트 안에 "),_("code",[t._v("router-view")]),t._v("를 지정하고, "),_("code",[t._v("routes")]),t._v("에서 "),_("code",[t._v("children")]),t._v(" 항목을 통해 하위 라우터를 지정할 수 있다. "),_("code",[t._v("user")]),t._v(" 항목 아래 "),_("code",[t._v("posts")]),t._v(" 항목을 두어, "),_("code",[t._v("user/posts")]),t._v("라는 항목으로 접근할 수 있다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("HTML 코드에서 "),e("code",[this._v("router-view")]),this._v("에 "),e("code",[this._v("name")]),this._v("속성으로 이름을 지정할 수 있다. 뷰 인스턴스에서 컴포넌트 설정 시 값으로 넣던 것 대신, 사전형으로 값을 입력해줄 수 있다. 이름이 없는 라우터 뷰는 "),e("code",[this._v("default")]),this._v(" 키워드로 지정가능하다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"뷰-http-통신"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#뷰-http-통신","aria-hidden":"true"}},[this._v("#")]),this._v(" 뷰 HTTP 통신")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("HTML 코드에 뷰 리소스 CDN를 추가하고, "),e("code",[this._v("this.$http.get('http://api.url.com/data.json').then(function(response) {});")]),this._v("와 같은 형식으로 처리된다. 받아온 자료는 문자열이기 때문에 "),e("code",[this._v("JSON.parse()")]),this._v("를 통해 JSON파일로 변환해주어야 한다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("사용방법은 역시 html 코드에 CDN 주소를 추가하고, "),e("code",[this._v("axios.get('URL 주소').then().catch();")]),this._v(" 혹은 post로 사용할 수 있다. 혹은 옵션 속성을 넘겨주어, 처리할 수도 있다. 액시오스는 객체로 바로 받아주기 때문에, 따로 변환하지 않아도 된다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"템플릿-프로젝트-구성"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#템플릿-프로젝트-구성","aria-hidden":"true"}},[this._v("#")]),this._v(" 템플릿 & 프로젝트 구성")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("템플릿은 마크업 속성과 뷰 인스턴스의 데이터와 로직을 연결하여, 사용자가 브라우저에서 볼 수 있는 HTML 코드를 변환해주는 속성으로, 템플릿을 이용하지 않고, HTML에 하드코딩한 후, "),e("code",[this._v("data")]),this._v(" 속성으로 값을 지정하게 되면, 먼저 화면에 하드코딩한 형식이 보여지고, 값이 대치된다. 반면 템플릿을 이용하는 경우, 템플릿을 완성하기 전까지 아무것도 보이지 않다가 템플릿이 완성된 후 페이지에 붙게 된다.")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("p",[t._v("뷰 directive는 "),_("code",[t._v("v-")]),t._v(" 접두사를 가진 모든 속성으로 자주 사용되는 디렉티브로 "),_("code",[t._v("v-if")]),t._v(", "),_("code",[t._v("v-show")]),t._v(", "),_("code",[t._v("v-for")]),t._v(", "),_("code",[t._v("v-bind")]),t._v(", "),_("code",[t._v("v-on")]),t._v(", "),_("code",[t._v("v-model")]),t._v("가 있다. "),_("code",[t._v("v-if")]),t._v("와 "),_("code",[t._v("v-show")]),t._v("의 차이는 후자는 해당 태그가 존재하되 화면에서만 보이지 않게 처리해준다. "),_("code",[t._v("v-on")]),t._v("은 화면 요소의 이벤트 등록을 위해서 사용되고, "),_("code",[t._v("v-model")]),t._v("은 폼(form)에서 주로 사용되는 속성으로 "),_("code",[t._v("<input>")]),t._v(", "),_("code",[t._v("<select>")]),t._v(", "),_("code",[t._v("<textarea>")]),t._v(" 태그에서만 사용할 수 있다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("v-on:click")]),this._v("으로 버튼 클릭 이벤트를 받을 수 있는데, 뷰 인스턴스 안에서 받을 때, 인자수를 맞춰서 파라미터를 받을 수 있다. html에서 호출할 때, 인자가 없으면, 받는 쪽에서 "),e("code",[this._v("function (event)")]),this._v("로 이벤트 객체를 받을 수 있다. 인자가 있을 때는 확인이 필요하다.")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("p",[t._v("템플릿에서 "),_("code",[t._v("methods")]),t._v("와 "),_("code",[t._v("computed")]),t._v("의 차이는 캐싱과 자동 갱신 기능이라고 하겠다. "),_("code",[t._v("computed")]),t._v(" 속성은 대상 데이터의 값이 변경되면, 자동으로 호출된다. "),_("code",[t._v("methods")]),t._v("는 명시적으로 호출이 될 때만 실행이 된다. 유사한 속성으로 "),_("code",[t._v("watch")]),t._v(" 속성이 있다. 데이터를 관찰하다가 변화가 생기면 호출되는 속성인데, "),_("code",[t._v("computed")]),t._v(" 속성은 내장 API를 이용하여 간단한 연산을 할 경우, "),_("code",[t._v("watch")]),t._v("는 데이터 호출과 같이 상대적으로 자원 소모가 큰 비동기 처리를 할 때 이용한다.")])}],!1,null,null,null);e.default=i.exports}}]);